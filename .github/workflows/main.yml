name: Publish Release
on:
  push:
    tags:
      - v*

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        settings:
          - platform: windows-latest
            args: "--verbose"
            target: "windows"
          - platform: macos-latest
            args: "--target x86_64-apple-darwin"
            target: "macos-intel"
          - platform: macos-latest
            args: "--target aarch64-apple-darwin"
            target: "macos-arm"
    runs-on: ${{ matrix.settings.platform }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Add Rust targets(macOS)
        if: matrix.settings.target == 'macos-arm'
        run: rustup target add aarch64-apple-darwin

      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable
      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: "./src-tauri -> target"

      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
      - name: setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.14.1
      - name: remove lockfile
        run: rm pnpm-lock.yaml
      - name: Install frontend dependencies
        run: pnpm install

      - name: Build app
        uses: tauri-apps/tauri-action@dev
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: ${{ matrix.settings.args }}
          tagName: v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
          releaseName: v__VERSION__-beta
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false

# name: 'publish'
# on:
#   push:
#     tags:
#       - 'v*'

# jobs:
#   publish-tauri:
#     permissions:
#       contents: write
#     strategy:
#       fail-fast: false
#       matrix:
#         # platform: [macos-latest, ubuntu-20.04, windows-latest]
#         platform: [windows-latest]

#     runs-on: ${{ matrix.platform }}
#     steps:
#       - uses: actions/checkout@v3
#       - name: setup node
#         uses: actions/setup-node@v3
#         with:
#           node-version-file: '.nvmrc'
#       - name: install Rust stable
#         uses: dtolnay/rust-toolchain@stable
#       - name: install dependencies (ubuntu only)
#         if: matrix.platform == 'ubuntu-20.04'
#         run: |
#           sudo apt-get update
#           sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf
#       - name: install frontend dependencies
#         run: yarn install # change this to npm or pnpm depending on which one you use
#       - uses: tauri-apps/tauri-action@v0
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         with:
#           tagName: v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
#           releaseName: 'PoE Guides v__VERSION__'
#           releaseBody: 'See the assets to download this version and install.'
#           releaseDraft: true
#           prerelease: false
