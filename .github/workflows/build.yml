name: Publish Release
on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

env:
  APP_NAME: 'PoE Guides'

jobs:
  release:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # build the changelog based on the commit messages between the versioned tags
      - name: Build changelog
        id: build_changelog
        run: |
          # NOTE: if commits subjects are standardized, you can filter the git log based on feat: and fix:
          # and then replace "feat:" with "New: " and "fix:" with "Fixed "
          # when AI gets good, we can also summarized commits into a bullet point list
          PREV_TAG=$(git tag --list v* | tail -n2 | head -n1)
          echo "changelog=$(git log $PREV_TAG...${{ github.ref_name }} --pretty=format:"- %s")" >> $GITHUB_OUTPUT

      - name: Setup Node.js
        uses: actions/setup-node@v4
        # NOTE: enterprise developers may hard code a version
        with:
          node-version: latest
          # node-version-file: '.nvmrc'

      - name: Setup Rust
        run: |
          rustup update --no-self-update

      - name: Install Ubuntu dependencies
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt update
          xargs sudo apt install -y < environment/apt_packages.txt

      - name: Build frontend
        run: |
          yarn --frozen-lockfile
          yarn build

      - name: Build Tauri app
        uses: tauri-apps/tauri-action@v0
        # if u get Error: Resource not accessible by integration
        # go to repository Settings => Action => General => Workflow permissions => Switch to Read and Write permisions
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          # tauri-action replaces \_\_VERSION\_\_ with the app version
          tagName: ${{ github.ref_name }}
          releaseName: '${{ env.APP_NAME }} v__VERSION__'
          releaseBody: |
            ${{steps.build_changelog.outputs.changelog}}
            See the assets to download this version and install.
          releaseDraft: true
          prerelease: false
